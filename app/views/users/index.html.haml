%script{:src => "//maps.google.com/maps/api/js?v=3.23&sensor=false&client=&key=&libraries=geometry&language=&hl=®ion=" }
%script{:src => "//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"}
%script{:src => "//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js", :type => "text/javascript"}
/ only if you need custom infoboxes

%h1 Painel de Controle Itaboraí Rotativo

%h5
  Bem vindo
  = @user.nome
  = link_to "Minhas Informações", user_path(current_user), class: "pull-right"

%hr

.row-fluid
  .wrapper
    %p
      %h4 Bilhete Ativo
      %br
      %table.table.table-striped
        %thead
          %tr
            %th Bilhete
            %th Setor
            %th Placa do Veículo
            %th Periodos
            %th Ativado em
            %th Renovar

        - @bilhetes_ativos.each do |bilhete|
          %tbody
            %tr
              %td= bilhete.bilhete
              %td= Setor.find(bilhete.setor_id).cor
              %td= bilhete.placa_veiculo
              %td
                = bilhete.periodo
                período(s) comprado(s)
              %td= time_tag bilhete.ativado_em
              %td= link_to "Renovar", renovar_bilhete_path(bilhete), class: 'btn btn-success' if bilhete.periodo == 1
      %hr

    %p
      %h4 Bilhete Pendentes
      %br
      %table.table.table-striped
        %thead
          %tr
            %th Bilhete
            %th Setor
            %th Placa do Veículo
            %th Periodos
            %th Ativar

        - @bilhetes_pendentes.each do |bilhete|
          %tbody
            %tr
              %td= bilhete.bilhete
              %td= Setor.find(bilhete.setor_id).cor
              %td= bilhete.placa_veiculo
              %td
                = bilhete.periodo
                período(s) comprado(s)
              %td= link_to "Ativar", ativar_bilhete_path(bilhete), class: 'btn btn-primary'
      %hr

    %p
      %h4 Meus Veiculos
      %table.table.table-striped
        %thead
        - if Veiculo.any?
          %th Modelo
          %th Placa
          - @user.veiculos.order(modelo: :asc).each do |veiculo|
            %tr
              %td
                = link_to veiculo.modelo, veiculo
              %td
                = veiculo.placa_veiculo.upcase

      = link_to "Cadastrar Veículo", new_veiculo_path
      %hr

    %p
      %h4 Históricos de Compras(Bilhetes Finalizados)
      %br
      %table.table.table-striped
        %thead
          %tr
            %th Bilhete
            %th Setor
            %th Placa do Veículo
            %th Periodos
            %th Finalizado
        - @bilhetes_finalizados.each do |bilhete|
          %tbody
            %tr
              %td= bilhete.bilhete
              %td= Setor.find(bilhete.setor_id).cor
              %td= bilhete.placa_veiculo
              %td
                = bilhete.periodo
                período(s) comprado(s)
              %td= time_tag bilhete.updated_at
      %hr
    %p
      %h4 Comprar Novo Bilhete
      = link_to 'Novo Bilhete', new_user_bilhete_path(current_user), class: 'btn btn-primary'

      / INICIO FORMULARIO BOTAO PAGSEGURO
      /%form{:action => veiculos_path, :method => "post", :onsubmit => "PagSeguroLightbox(this); return false;"}
      /  %input{:name => "itemCode", :type => "hidden", :value => "4D8327DC96962DAAA4563F940F58B9A3"}/
      /  %input{:name => "iot", :type => "hidden", :value => "button"}/
      /  %input{:alt => "Pague com PagSeguro - é rápido, grátis e seguro!", :name => "submit", :src => "https://stc.pagseguro.uol.com.br/public/img/botoes/pagamentos/209x48-comprar-assina.gif", :type => "image"}/
      /  %script{:src => "https://stc.pagseguro.uol.com.br/pagseguro/api/v2/checkout/pagseguro.lightbox.js", :type => "text/javascript"}
      / FINAL FORMULARIO BOTAO PAGSEGURO
      %hr
    %p
      %h4 Mapa com a localização dos estacionamentos
      %div{:style => "width: 800px;"}
        #map{:style => "width: 800px; height: 400px;"}
      :javascript
        handler = Gmaps.build('Google');
        handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
          markers = handler.addMarkers(#{raw @hash.to_json});
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();
        });
      %br
      %br
      %br
